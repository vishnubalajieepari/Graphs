void topo(int node,vector<int>&vis,stack<int>&st,vector<int>adj[])
	{
	    vis[node]=1;
	    for(auto it:adj[node])
	    {
	        if(!vis[it])
	        {
	            topo(it,vis,st,adj);
	        }
	    }
	    st.push(node); // After completion of dfs of every node we push the node into the stack from backwards
	}
	vector<int>topoSort(int n, vector<int> adj[]) 
	{
	    // code here
	    stack<int>st;
	    vector<int>vis(n,0);
	    for(int i=0;i<n;i++)
	    {
	        if(!vis[i])
	        {
	            topo(i,vis,st,adj);
	        }
	    }
	    vector<int>ve;
	    while(!st.empty())
	    {
	        ve.push_back(st.top());
	        st.pop();
	    }
	    return ve;
	}
